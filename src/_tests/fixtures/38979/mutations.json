[
  {
    "query": "mutation($input: AddLabelsToLabelableInput!) { addLabelsToLabelable(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "labelIds": [
          "MDU6TGFiZWwxNjA4NjM0NDg0"
        ],
        "labelableId": "MDExOlB1bGxSZXF1ZXN0MzI1ODk5Njc0"
      }
    }
  },
  {
    "query": "mutation($input: RemoveLabelsFromLabelableInput!) { removeLabelsFromLabelable(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "labelIds": [
          "MDU6TGFiZWw2NDY3ODg4ODg="
        ],
        "labelableId": "MDExOlB1bGxSZXF1ZXN0MzI1ODk5Njc0"
      }
    }
  },
  {
    "query": "mutation($input: AddProjectCardInput!) { addProjectCard(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "contentId": "MDExOlB1bGxSZXF1ZXN0MzI1ODk5Njc0",
        "projectColumnId": "MDEzOlByb2plY3RDb2x1bW43NTUyOTIy"
      }
    }
  },
  {
    "query": "mutation($input: UpdateIssueCommentInput!) { updateIssueComment(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "id": "MDEyOklzc3VlQ29tbWVudDYyNzA5NzAxMg==",
        "body": "@ExE-Boss Thank you for submitting this PR!\n\n***This is a live comment which I will keep updated.***\n\n\n## Code Reviews\n\nBecause this is a widely-used package, a DT maintainer will need to review it before it can be merged.\n\n## Status\n\n * ✅ No merge conflicts\n * ✅ Continuous integration tests have passed\n * ❌ A DT maintainer needs to merge changes which affect module config files\n\nOnce every item on this list is checked, I'll ask you for permission to merge and publish the changes.\n\n----------------------\n<details><summary>Diagnostic Information: What the bot saw about this PR</summary>\n\n```json\n{\n  \"type\": \"info\",\n  \"now\": \"-\",\n  \"pr_number\": 38979,\n  \"author\": \"ExE-Boss\",\n  \"owners\": [\n    \"RReverser\"\n  ],\n  \"dangerLevel\": \"ScopedAndConfiguration\",\n  \"headCommitAbbrOid\": \"2223341\",\n  \"headCommitOid\": \"222334139e52fc16369464cfb5dc95c82f71192f\",\n  \"mergeIsRequested\": false,\n  \"stalenessInDays\": 0,\n  \"lastCommitDate\": \"2020-01-03T21:02:41.000Z\",\n  \"reopenedDate\": \"2019-10-18T22:52:06.000Z\",\n  \"lastCommentDate\": \"2020-05-12T15:13:19.000Z\",\n  \"maintainerBlessed\": false,\n  \"reviewLink\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38979/files\",\n  \"hasMergeConflict\": false,\n  \"authorIsOwner\": false,\n  \"isFirstContribution\": false,\n  \"popularityLevel\": \"Critical\",\n  \"anyPackageIsNew\": false,\n  \"packages\": [\n    \"es-abstract\"\n  ],\n  \"files\": [\n    {\n      \"path\": \"types/es-abstract/GetIntrinsic.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es2015.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es2016.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es2017.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es2018.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es2019.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es5.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es6.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/es7.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/assertRecord.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/assign.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/callBind.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/callBound.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/every.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/forEach.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/getInferredName.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/getIteratorMethod.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/getProto.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/getSymbolDescription.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isFinite.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isNaN.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isPrefixOf.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isPrimitive.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isPropertyDescriptor.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/isSamePropertyDescriptor.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/maxSafeInteger.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/mod.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/regexTester.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/setProto.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/helpers/sign.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/index.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/operations/2015.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/operations/2016.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/operations/2017.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/operations/2018.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/operations/2019.d.ts\",\n      \"kind\": \"definition\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/GetIntrinsic.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es2015.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es2016.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es2017.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es2018.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es2019.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/es5.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/assertRecord.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/assign.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/callBind.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/callBound.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/every.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/forEach.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/getInferredName.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/getIteratorMethod.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/getProto.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/getSymbolDescription.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isFinite.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isNaN.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isPrefixOf.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isPrimitive.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isPropertyDescriptor.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/isSamePropertyDescriptor.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/maxSafeInteger.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/mod.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/regexTester.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/setProto.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/helpers/sign.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/index.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/operations/2015.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/operations/2016.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/operations/2017.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/operations/2018.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/test/operations/2019.test.ts\",\n      \"kind\": \"test\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/tsconfig.json\",\n      \"kind\": \"package-meta\",\n      \"package\": \"es-abstract\"\n    },\n    {\n      \"path\": \"types/es-abstract/tslint.json\",\n      \"kind\": \"package-meta\",\n      \"package\": \"es-abstract\"\n    }\n  ],\n  \"hasDismissedReview\": true,\n  \"ciResult\": \"pass\",\n  \"lastReviewDate\": \"2020-05-12T04:51:52.000Z\",\n  \"reviewersWithStaleReviews\": [\n    {\n      \"reviewedAbbrOid\": \"3aba5ac\",\n      \"reviewer\": \"sandersn\",\n      \"date\": \"2019-10-22T22:56:09Z\"\n    },\n    {\n      \"reviewedAbbrOid\": \"0e6e7f4\",\n      \"reviewer\": \"weswigham\",\n      \"date\": \"2019-10-22T21:43:25Z\"\n    }\n  ],\n  \"approvalFlags\": 1,\n  \"isChangesRequested\": false\n}\n```\n\n</details>\n<!--typescript_bot_welcome-->"
      }
    }
  },
  {
    "query": "mutation($input: AddCommentInput!) { addComment(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "subjectId": "MDExOlB1bGxSZXF1ZXN0MzI1ODk5Njc0",
        "body": "🔔 @RReverser - please [review this PR](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38979/files) in the next few days. Be sure to explicitly select **`Approve`** or **`Request Changes`** in the GitHub UI so I know what's going on.\n<!--typescript_bot_pinging-reviewers-->"
      }
    }
  },
  {
    "query": "mutation($input: AddCommentInput!) { addComment(input: $input) { clientMutationId } }",
    "variables": {
      "input": {
        "subjectId": "MDExOlB1bGxSZXF1ZXN0MzI1ODk5Njc0",
        "body": "@sandersn, @weswigham Thank you for reviewing this PR! The author has pushed new commits since your last review. Could you take another look and submit a fresh review?\n<!--typescript_bot_stale-ping-764528-0e6e7f4-->"
      }
    }
  }
]